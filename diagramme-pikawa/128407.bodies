class IHMPikawa
!!!139543.cpp!!!	initialiserIcones() : void
    iconeBoutonDetectee   = new QIcon(":/images/cafetiere-rouge.png");
    iconeBoutonConnecte   = new QIcon(":/images/cafetiere-verte.png");
    iconeBoutonDeconnecte = new QIcon(":/images/cafetiere-noire.png");

    iconeCapsuleColombia  = new QIcon(":colombia.png");
    iconeCapsuleIndonesia = new QIcon(":indonesia.png");
    iconeCapsuleEthiopia  = new QIcon(":ethiopia.png");
    iconeCapsuleVolluto   = new QIcon(":volluto.png");
    iconeCapsuleCapriccio = new QIcon(":capriccio.png");
    iconeCapsuleCosi      = new QIcon(":cosi.png");
    iconeCapsuleScuro     = new QIcon(":scuro.png");
    iconeCapsuleVanilla   = new QIcon(":vanilla-eclair.png");
    iconeBacPlein         = new QPixmap(":/images/bacPlein.png");
    iconeBacVide          = new QPixmap(":/images/bacVide.png");
!!!139671.cpp!!!	initialiserIHM() : void
    ui->statusbar->showMessage(QString::fromUtf8(NOM) + " " +
                               QString::fromUtf8(VERSION));

    chargerBoutonsCafe();

    initialiserIcones();

    activerBoutonConnexionEtatDeconnecte();

    initialiserPreferences();

    afficherPageAcceuil();

    ui->boutonLancerPreparation->setEnabled(false);
!!!139799.cpp!!!	gererEvenements() : void
    /**
     * @todo A remanier
     */
    connect(ui->selectionLongueurPreparation,
            SIGNAL(valueChanged(int)),
            this,
            SLOT(gererLongueurPreparation(int)));

    connect(ui->boutonInformations,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageInformations()));

    connect(ui->boutonEntretien,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageEntretien()));

    connect(ui->boutonParametres,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageParametres()));

    connect(ui->boutonAcceuilInformation,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageAcceuil()));

    connect(ui->boutonEntretienInformation,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageEntretien()));

    connect(ui->boutonParametresInformation,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageParametres()));

    connect(ui->boutonConnexion,
            SIGNAL(clicked()),
            cafetiere,
            SLOT(gererConnexion()));

    connect(ui->bontonChangerCafe,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageSelectionCafe()));

    connect(ui->boutonAcceuilSelectionCafe,
            SIGNAL(clicked()),
            this,
            SLOT(afficherPageAcceuil()));

    connect(cafetiere,
            SIGNAL(cafetiereDetectee(QString, QString)),
            this,
            SLOT(activerBoutonConnexionEtatDetecte(QString, QString)));
    connect(cafetiere,
            SIGNAL(cafetiereConnectee(QString, QString)),
            this,
            SLOT(activerBoutonConnexionEtatConnecte(QString, QString)));
    connect(cafetiere,
            SIGNAL(cafetiereDeconnectee()),
            this,
            SLOT(activerBoutonConnexionEtatDeconnecte()));

    connect(ui->boutonRafraichir,
            SIGNAL(clicked()),
            this,
            SLOT(rafraichirDecouverte()));
    connect(cafetiere,
            SIGNAL(rechercheTerminee(bool)),
            this,
            SLOT(terminerDecouverte(bool)));

    connect(cafetiere,
            SIGNAL(etatCafetiere(int, bool, bool, bool)),
            this,
            SLOT(mettreAJourEtatCafetiere(int, bool, bool, bool)));

    connect(cafetiere,
            SIGNAL(etatMagasinIHM(QStringList)),
            this,
            SLOT(mettreAJourMagasinIHM(QStringList)));

    connect(cafetiere,
            SIGNAL(cafetierePrete()),
            this,
            SLOT(afficherCafetierePrete()));

    connect(cafetiere,
            SIGNAL(cafetierePasPrete()),
            this,
            SLOT(afficherCafetierePasPrete()));

    connect(ui->boutonLancerPreparation,
            SIGNAL(clicked()),
            cafetiere,
            SLOT(lancerLaPreparationCafe()));

    gererSelectionCafes();
!!!139927.cpp!!!	initialiserPreferences() : void
    QStringList preferences = cafetiere->getPreferences();

    if(preferences.size() > 0)
    {
        ui->selectionLongueurPreparation->setValue(
          preferences
            .at(Cafetiere::ChampsTablePreferences::
                  COLONNE_PREFERENCES_ID_TYPEBOISSON)
            .toInt() -
          1);
        gererLongueurPreparation(preferences
                                   .at(Cafetiere::ChampsTablePreferences::
                                         COLONNE_PREFERENCES_ID_TYPEBOISSON)
                                   .toInt() -
                                 1);
        switch(
          preferences
            .at(
              Cafetiere::ChampsTablePreferences::COLONNE_PREFERENCES_ID_CAPSULE)
            .toInt() -
          1)
        {
            case Cafetiere::NomCaspule::Colombia:
                selectionnerColombia();
                break;
            case Cafetiere::NomCaspule::Indonesia:
                selectionnerIndonesia();
                break;
            case Cafetiere::NomCaspule::Ethiopia:
                selectionnerEthiopia();
                break;
            case Cafetiere::NomCaspule::Volluto:
                selectionnerVolluto();
                break;
            case Cafetiere::NomCaspule::Capriccio:
                selectionnerCapriccio();
                break;
            case Cafetiere::NomCaspule::Cosi:
                selectionnerCosi();
                break;
            case Cafetiere::NomCaspule::Scuro:
                selectionnerScuro();
                break;
            case Cafetiere::NomCaspule::Vanilla:
                selectionnerVanilla();
                break;
        }
    }
!!!140055.cpp!!!	convertirPourcentageEau(in reservoirEau : int) : int
    int reservoirEauPourcentage = (reservoirEau * 100) / TAILLE_RESERVOIR;
    return reservoirEauPourcentage;
!!!140183.cpp!!!	chargerBoutonsCafe() : void
    boutonsCafes.push_back(ui->boutonColombia);
    boutonsCafes.push_back(ui->boutonIndonesia);
    boutonsCafes.push_back(ui->boutonEthiopia);
    boutonsCafes.push_back(ui->boutonVolluto);
    boutonsCafes.push_back(ui->boutonCapriccio);
    boutonsCafes.push_back(ui->boutonCosi);
    boutonsCafes.push_back(ui->boutonScuro);
    boutonsCafes.push_back(ui->boutonVanilla);
!!!140311.cpp!!!	ouvrirBaseDeDonnees() : void
    baseDeDonnees = BaseDeDonnees::getInstance();
    baseDeDonnees->ouvrir(NOM_BDD);
!!!140439.cpp!!!	afficherAvertissement(in niveauEau : int, in bacPasPlein : bool, in capsulePresente : bool, in tassePresente : bool) : void
    QString message = "";

    if((cafetiere->getNiveauEau() - cafetiere->getNiveauEauNecessaire()) <= 0)
    {
        message.append("Eau insuffisante ");
    }

    if(!bacPasPlein)
    {
        message.append("Bac plein ");
    }

    if(!capsulePresente)
    {
        message.append("Caspule non présente ");
    }

    if(!tassePresente)
    {
        message.append("Tasse non présente ");
    }

    if(!cafetiere->estCapsuleChoisieDisponible())
    {
        message.append("Caspule choisie indisponible ");
        ui->capsuleChoisie->setStyleSheet("font-size:25px; color:red;");
    }

    afficherMessage(message, "red");
!!!140567.cpp!!!	afficherMessage(in message : QString, in couleur : QString) : void
    qDebug() << Q_FUNC_INFO << "message" << message;
    ui->labelAvertisseur->setText(message);
    ui->labelAvertisseur->setAlignment(Qt::AlignCenter | Qt::AlignBottom);
    ui->labelAvertisseur->setStyleSheet("font-size:25px; color:" + couleur +
                                        ";");
!!!140695.cpp!!!	IHMPikawa(inout parent : QWidget = nullptr)
    ui->setupUi(this);
    qDebug() << Q_FUNC_INFO;

    ouvrirBaseDeDonnees();

    cafetiere = new Cafetiere(this);

    gererEvenements();

    initialiserIHM();

#ifdef PLEIN_ECRAN
    showFullScreen();
// showMaximized();
#endif
!!!140823.cpp!!!	~IHMPikawa()
    delete ui;
    delete iconeBoutonDetectee;
    delete iconeBoutonConnecte;
    delete iconeBoutonDeconnecte;
    BaseDeDonnees::detruireInstance();
    qDebug() << Q_FUNC_INFO;
!!!140951.cpp!!!	afficherPage(in page : IHMPikawa::Page) : void
    // qDebug() << Q_FUNC_INFO << "page" << page;
    ui->ecrans->setCurrentIndex(page);
!!!141079.cpp!!!	afficherPageAcceuil() : void
    afficherPage(IHMPikawa::Page::Accueil);
!!!141207.cpp!!!	afficherPageInformations() : void
    afficherPage(IHMPikawa::Page::Information);
!!!141335.cpp!!!	afficherPageEntretien() : void
    afficherPage(IHMPikawa::Page::Entretien);
!!!141463.cpp!!!	afficherPageParametres() : void
    afficherPage(IHMPikawa::Page::Parametres);
!!!141591.cpp!!!	afficherPageSelectionCafe() : void
    afficherPage(IHMPikawa::Page::SelectionCafe);
!!!141719.cpp!!!	activerBoutonConnexionEtatDetecte(in nom : QString, in adresse : QString) : void
    qDebug() << Q_FUNC_INFO << nom << adresse;
    // si une cafetère pikawa a été détectée
    ui->boutonConnexion->setEnabled(true);
    ui->boutonConnexion->setIcon(*iconeBoutonDetectee);
    ui->labelEtatConnexion->setText("Cafetière détectée");
!!!141847.cpp!!!	activerBoutonConnexionEtatConnecte(in nom : QString, in adresse : QString) : void
    qDebug() << Q_FUNC_INFO << nom << adresse;
    // si une cafetère pikawa a été connectée
    ui->boutonConnexion->setEnabled(true);
    ui->boutonConnexion->setIcon(*iconeBoutonConnecte);
    ui->labelEtatConnexion->setText("Cafetière connectée");
    ui->boutonRafraichir->setEnabled(false);
!!!141975.cpp!!!	activerBoutonConnexionEtatDeconnecte() : void
    qDebug() << Q_FUNC_INFO;
    // si une cafetère pikawa a été déconnectée
    ui->boutonConnexion->setEnabled(true);
    ui->boutonConnexion->setIcon(*iconeBoutonDeconnecte);
    ui->labelEtatConnexion->setText("Cafetière déconnectée");
    ui->boutonRafraichir->setEnabled(true);
!!!142103.cpp!!!	rafraichirDecouverte() : void
    qDebug() << Q_FUNC_INFO;
    ui->boutonRafraichir->setEnabled(false);
    cafetiere->demarrerDecouverte();
!!!142231.cpp!!!	terminerDecouverte(in detecte : bool) : void
    qDebug() << Q_FUNC_INFO << "detecte" << detecte;
    ui->boutonRafraichir->setEnabled(true);
!!!142359.cpp!!!	gererLongueurPreparation(in longueurPreparation : int) : void
    qDebug() << Q_FUNC_INFO << "longueurPreparation" << longueurPreparation;
    QStringList labelsLongueurPreparation = cafetiere->getNomLongueurs();
    ui->labelLongueurPreparation->setText(
      labelsLongueurPreparation.at(longueurPreparation));
    cafetiere->setLongueurChoisie(longueurPreparation);
!!!142487.cpp!!!	gererSelectionCafes() : void
    connect(ui->boutonColombia,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerColombia()));
    connect(ui->boutonIndonesia,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerIndonesia()));
    connect(ui->boutonEthiopia,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerEthiopia()));
    connect(ui->boutonVolluto,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerVolluto()));
    connect(ui->boutonCosi, SIGNAL(clicked()), this, SLOT(selectionnerCosi()));
    connect(ui->boutonScuro,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerScuro()));
    connect(ui->boutonVanilla,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerVanilla()));
    connect(ui->boutonCapriccio,
            SIGNAL(clicked()),
            this,
            SLOT(selectionnerCapriccio()));
    connect(cafetiere, SIGNAL(cafePret()), this, SLOT(afficherCafePret()));
    connect(cafetiere,
            SIGNAL(cafeEnCours()),
            this,
            SLOT(afficherCafeEnCours()));
    connect(cafetiere,
            SIGNAL(erreurPreparation()),
            this,
            SLOT(afficherErreurPreparation()));
!!!142615.cpp!!!	selectionnerColombia() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleColombia);
    ui->capsuleChoisie->setText("Colombia");
    int idCapsule = cafetiere->getIdCapsule("Colombia");
    qDebug() << Q_FUNC_INFO << "idCapsule Colombia" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!142743.cpp!!!	selectionnerIndonesia() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleIndonesia);
    ui->capsuleChoisie->setText("Indonesia");
    int idCapsule = cafetiere->getIdCapsule("Indonesia");
    qDebug() << Q_FUNC_INFO << "idCapsule Indonesia" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!142871.cpp!!!	selectionnerEthiopia() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleEthiopia);
    ui->capsuleChoisie->setText("Ethiopia");
    int idCapsule = cafetiere->getIdCapsule("Ethiopia");
    qDebug() << Q_FUNC_INFO << "idCapsule Ethiopia" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!142999.cpp!!!	selectionnerVolluto() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleVolluto);
    ui->capsuleChoisie->setText("Volluto");
    int idCapsule = cafetiere->getIdCapsule("Volluto");
    qDebug() << Q_FUNC_INFO << "idCapsule Volluto" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!143127.cpp!!!	selectionnerCosi() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleCosi);
    ui->capsuleChoisie->setText("Cosi");
    int idCapsule = cafetiere->getIdCapsule("Cosi");
    qDebug() << Q_FUNC_INFO << "idCapsule Cosi" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!143255.cpp!!!	selectionnerScuro() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleScuro);
    ui->capsuleChoisie->setText("Scuro");
    int idCapsule = cafetiere->getIdCapsule("Scuro");
    qDebug() << Q_FUNC_INFO << "idCapsule Scuro" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!143383.cpp!!!	selectionnerVanilla() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleVanilla);
    ui->capsuleChoisie->setText("Vanilla");
    int idCapsule = cafetiere->getIdCapsule("Vanilla");
    qDebug() << Q_FUNC_INFO << "idCapsule Vanilla" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!143511.cpp!!!	selectionnerCapriccio() : void
    ui->bontonChangerCafe->setIcon(*iconeCapsuleCapriccio);
    ui->capsuleChoisie->setText("Capriccio");
    int idCapsule = cafetiere->getIdCapsule("Capriccio");
    qDebug() << Q_FUNC_INFO << "idCapsule Capriccio" << idCapsule;
    cafetiere->setCapsuleChoisie(idCapsule);
    afficherPageAcceuil();
!!!143639.cpp!!!	afficherCafePret() : void
    qDebug() << Q_FUNC_INFO;
    afficherMessage("Café prêt", "green");
    cafetiere->estPrete();
!!!143767.cpp!!!	afficherCafeEnCours() : void
    qDebug() << Q_FUNC_INFO;
    afficherMessage("Café en cours", "orange");
!!!143895.cpp!!!	afficherErreurPreparation() : void
    qDebug() << Q_FUNC_INFO;
    afficherMessage("Préparation impossible !", "red");
!!!144023.cpp!!!	mettreAJourEtatCafetiere(in reservoirEau : int, in bacCapsules : bool, in etatCapsule : bool, in etatTasse : bool) : void
    int reservoirEauPourcentage = convertirPourcentageEau(reservoirEau);
    ui->niveauEau->setValue(reservoirEauPourcentage);

    if(!bacCapsules)
    {
        ui->etatBac->setPixmap(*iconeBacPlein);
        ui->labelBac->setStyleSheet("font-size: 25px; color: red;");
    }
    else
    {
        ui->etatBac->setPixmap(*iconeBacVide);
        ui->labelBac->setStyleSheet("font-size: 25px; color: black;");
    }

    afficherAvertissement(reservoirEau, bacCapsules, etatCapsule, etatTasse);
!!!144151.cpp!!!	mettreAJourMagasinIHM(in caspulesDisponibles : QStringList) : void
    /**
     * @todo Et la capsule choisie ?
     */
    for(int i = 0; i < caspulesDisponibles.size(); ++i)
    {
        if(caspulesDisponibles.at(i) == "1")
        {
            boutonsCafes.at(i)->setEnabled(true);
        }
        else
        {
            boutonsCafes.at(i)->setEnabled(false);
        }
    }
!!!144279.cpp!!!	afficherCafetierePrete() : void
    ui->boutonLancerPreparation->setEnabled(true);
!!!144407.cpp!!!	afficherCafetierePasPrete() : void
    ui->boutonLancerPreparation->setEnabled(false);
